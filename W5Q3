Input

The first line contains the array size n
The next n lines contains the elements of the array.

Output

Block product |M|

Example 1

M=[3215]
      |M|=3∗5−2∗1=13


Example 2

M=[32152−25510750−256]
      

|M|=∣∣∣[3215]∣∣∣∗∣∣∣[0−256]∣∣∣−∣∣∣[2−255]∣∣∣∗∣∣∣[1075]∣∣∣=13∗10−20∗5=30


Example 3

M = [4 1 6 5 2 1 6 3 4 5 0 5 0 2 0 2   0 6 2 1 3 1 0 4 3 1 7 0 1 4 7 4   0 3 1 3 3 7 0 4 4 3 5 4 4 1 0 2    2 2 7 6 4 2 6 1 1 2 4 0 3 1 4 1]

A = [ 4 1 6 5 2 1 6 3 4 5 0 5 0 2 0 2 ]                |A|  =  0
B = [ 0 6 2 1 3 1 0 4 3 1 7 0 1 4 7 4 ]                |B|  =  372
C = [ 0 3 1 3 3 7 0 4 4 3 5 4 4 1 0 2 ]                |C|  =  -36
D = [ 2 2 7 6 4 2 6 1 1 2 4 0 3 1 4 1 ]                |D|  =  -62

So, |M| = | [ 0 372 -36 -62] | = 13392.

#include <stdio.h>

#define N 1024

int product(int M[N], int i,int j, int n)
{
    int A,B,C,D;
    
    if(n == 4){
        return M[i]*M[i+3] -  M[i+1]*M[i+2];
    }
    
    A = product(M,i,i+(n/4)-1,n/4);
    B = product(M,i+(n/4),i+(n/2)-1,n/4);
    C = product(M,i+(n/2),i+(3*n/4)-1,n/4);
    D = product(M,i+(3*n/4),j,n/4);
    
    return A*D - B*C;
}
 
 
int main()
{
 
    int n;
    int M[N];
    
    scanf("%d",&n);
 
    for(int i=0; i<n;i++)
        scanf("%d", &M[i]);
        
    printf("%d", product(M, 0, n-1, n));
    return 0;
}
